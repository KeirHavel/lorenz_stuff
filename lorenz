#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Fri Aug 24 11:24:08 2018

@author: keir
"""
#Numerically integrates Lorenz model and graphs it

import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D


fig = plt.figure()

ax = plt.axes(projection='3d')


def lorenz(dt,x0,y0,z0,r,t):
    x_a = [x0]
    y_a = [y0]
    z_a = [z0]
    n = int(t/dt)
    for i in range(1,n+1):
        xi = x_a[i-1]
        yi = y_a[i-1]
        zi = z_a[i-1]
        x = xi+ dt*(10*(yi-xi))
        y = yi + dt*(r*xi- xi*zi - yi)
        z = zi + dt*(xi*yi - (8.0/3)*zi)
        x_a.append(x)
        y_a.append(y)
        z_a.append(z)
    return x_a,y_a,z_a
    

xs28,ys28,zs28 = lorenz(0.01,0.01,0.01,0.01,28,20.0)

ax.plot(xs28, ys28, zs28)


